// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/issho-ni/issho/internal/pkg/grpc (interfaces: Client)

// Package mock_grpc is a generated GoMock package.
package mock_grpc

import (
	gomock "github.com/golang/mock/gomock"
	grpc "github.com/issho-ni/issho/internal/pkg/grpc"
	grpc0 "google.golang.org/grpc"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// ClientConn mocks base method
func (m *MockClient) ClientConn() *grpc0.ClientConn {
	ret := m.ctrl.Call(m, "ClientConn")
	ret0, _ := ret[0].(*grpc0.ClientConn)
	return ret0
}

// ClientConn indicates an expected call of ClientConn
func (mr *MockClientMockRecorder) ClientConn() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClientConn", reflect.TypeOf((*MockClient)(nil).ClientConn))
}

// HealthCheck mocks base method
func (m *MockClient) HealthCheck() *grpc.Status {
	ret := m.ctrl.Call(m, "HealthCheck")
	ret0, _ := ret[0].(*grpc.Status)
	return ret0
}

// HealthCheck indicates an expected call of HealthCheck
func (mr *MockClientMockRecorder) HealthCheck() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthCheck", reflect.TypeOf((*MockClient)(nil).HealthCheck))
}
