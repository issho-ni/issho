// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kazoku/kazoku.proto

package kazoku

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_issho_ni_issho_internal_pkg_uuid "github.com/issho-ni/issho/internal/pkg/uuid"
	grpc "google.golang.org/grpc"
	io "io"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type UserAccount_Role int32

const (
	UserAccount_INACTIVE UserAccount_Role = 0
	UserAccount_MEMBER   UserAccount_Role = 1
	UserAccount_ADMIN    UserAccount_Role = 98
	UserAccount_OWNER    UserAccount_Role = 99
)

var UserAccount_Role_name = map[int32]string{
	0:  "INACTIVE",
	1:  "MEMBER",
	98: "ADMIN",
	99: "OWNER",
}

var UserAccount_Role_value = map[string]int32{
	"INACTIVE": 0,
	"MEMBER":   1,
	"ADMIN":    98,
	"OWNER":    99,
}

func (x UserAccount_Role) String() string {
	return proto.EnumName(UserAccount_Role_name, int32(x))
}

func (UserAccount_Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0749abf42e57ef8a, []int{1, 0}
}

type Account struct {
	Id              *github_com_issho_ni_issho_internal_pkg_uuid.UUID `protobuf:"bytes,1,opt,name=id,proto3,customtype=github.com/issho-ni/issho/internal/pkg/uuid.UUID" json:"id,omitempty" bson:"_id"`
	Name            string                                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedByUserID *github_com_issho_ni_issho_internal_pkg_uuid.UUID `protobuf:"bytes,3,opt,name=createdByUserID,proto3,customtype=github.com/issho-ni/issho/internal/pkg/uuid.UUID" json:"createdByUserID,omitempty"`
	UpdatedByUserID *github_com_issho_ni_issho_internal_pkg_uuid.UUID `protobuf:"bytes,4,opt,name=updatedByUserID,proto3,customtype=github.com/issho-ni/issho/internal/pkg/uuid.UUID" json:"updatedByUserID,omitempty" bson:",omitempty"`
	ExpiresAt       *time.Time                                        `protobuf:"bytes,5,opt,name=expiresAt,proto3,stdtime" json:"expiresAt,omitempty"`
	CreatedAt       *time.Time                                        `protobuf:"bytes,6,opt,name=createdAt,proto3,stdtime" json:"createdAt,omitempty"`
	UpdatedAt       *time.Time                                        `protobuf:"bytes,7,opt,name=updatedAt,proto3,stdtime" json:"updatedAt,omitempty" bson:",omitempty"`
	DeletedAt       *time.Time                                        `protobuf:"bytes,8,opt,name=deletedAt,proto3,stdtime" json:"deletedAt,omitempty" bson:",omitempty"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_0749abf42e57ef8a, []int{0}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Account.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return m.Size()
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetExpiresAt() *time.Time {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *Account) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Account) GetUpdatedAt() *time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Account) GetDeletedAt() *time.Time {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

type UserAccount struct {
	AccountID       *github_com_issho_ni_issho_internal_pkg_uuid.UUID `protobuf:"bytes,1,opt,name=accountID,proto3,customtype=github.com/issho-ni/issho/internal/pkg/uuid.UUID" json:"accountID,omitempty"`
	UserID          *github_com_issho_ni_issho_internal_pkg_uuid.UUID `protobuf:"bytes,2,opt,name=userID,proto3,customtype=github.com/issho-ni/issho/internal/pkg/uuid.UUID" json:"userID,omitempty"`
	Role            UserAccount_Role                                  `protobuf:"varint,3,opt,name=role,proto3,enum=kazoku.UserAccount_Role" json:"role,omitempty"`
	CreatedByUserID *github_com_issho_ni_issho_internal_pkg_uuid.UUID `protobuf:"bytes,4,opt,name=createdByUserID,proto3,customtype=github.com/issho-ni/issho/internal/pkg/uuid.UUID" json:"createdByUserID,omitempty"`
	UpdatedByUserID *github_com_issho_ni_issho_internal_pkg_uuid.UUID `protobuf:"bytes,5,opt,name=updatedByUserID,proto3,customtype=github.com/issho-ni/issho/internal/pkg/uuid.UUID" json:"updatedByUserID,omitempty" bson:",omitempty"`
	CreatedAt       *time.Time                                        `protobuf:"bytes,6,opt,name=createdAt,proto3,stdtime" json:"createdAt,omitempty"`
	UpdatedAt       *time.Time                                        `protobuf:"bytes,7,opt,name=updatedAt,proto3,stdtime" json:"updatedAt,omitempty" bson:",omitempty"`
	DeletedAt       *time.Time                                        `protobuf:"bytes,8,opt,name=deletedAt,proto3,stdtime" json:"deletedAt,omitempty" bson:",omitempty"`
}

func (m *UserAccount) Reset()         { *m = UserAccount{} }
func (m *UserAccount) String() string { return proto.CompactTextString(m) }
func (*UserAccount) ProtoMessage()    {}
func (*UserAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_0749abf42e57ef8a, []int{1}
}
func (m *UserAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAccount.Merge(m, src)
}
func (m *UserAccount) XXX_Size() int {
	return m.Size()
}
func (m *UserAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAccount.DiscardUnknown(m)
}

var xxx_messageInfo_UserAccount proto.InternalMessageInfo

func (m *UserAccount) GetRole() UserAccount_Role {
	if m != nil {
		return m.Role
	}
	return UserAccount_INACTIVE
}

func (m *UserAccount) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *UserAccount) GetUpdatedAt() *time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *UserAccount) GetDeletedAt() *time.Time {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

type UserAccounts struct {
	UserAccounts []*UserAccount `protobuf:"bytes,1,rep,name=userAccounts,proto3" json:"userAccounts,omitempty"`
}

func (m *UserAccounts) Reset()         { *m = UserAccounts{} }
func (m *UserAccounts) String() string { return proto.CompactTextString(m) }
func (*UserAccounts) ProtoMessage()    {}
func (*UserAccounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_0749abf42e57ef8a, []int{2}
}
func (m *UserAccounts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserAccounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserAccounts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserAccounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAccounts.Merge(m, src)
}
func (m *UserAccounts) XXX_Size() int {
	return m.Size()
}
func (m *UserAccounts) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAccounts.DiscardUnknown(m)
}

var xxx_messageInfo_UserAccounts proto.InternalMessageInfo

func (m *UserAccounts) GetUserAccounts() []*UserAccount {
	if m != nil {
		return m.UserAccounts
	}
	return nil
}

func init() {
	proto.RegisterEnum("kazoku.UserAccount_Role", UserAccount_Role_name, UserAccount_Role_value)
	proto.RegisterType((*Account)(nil), "kazoku.Account")
	proto.RegisterType((*UserAccount)(nil), "kazoku.UserAccount")
	proto.RegisterType((*UserAccounts)(nil), "kazoku.UserAccounts")
}

func init() { proto.RegisterFile("kazoku/kazoku.proto", fileDescriptor_0749abf42e57ef8a) }

var fileDescriptor_0749abf42e57ef8a = []byte{
	// 607 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x55, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0xb6, 0x53, 0x27, 0x6d, 0xa6, 0xf9, 0xff, 0xa4, 0x5b, 0x0e, 0x26, 0x87, 0x24, 0xb2, 0x38,
	0xe4, 0x50, 0xec, 0x36, 0xad, 0x40, 0xe2, 0x50, 0xb0, 0x9b, 0xa8, 0xb2, 0xa0, 0x45, 0x32, 0x2d,
	0x48, 0x1c, 0x40, 0x4e, 0xbc, 0xb8, 0xab, 0xc6, 0x5e, 0xcb, 0x5e, 0x23, 0xca, 0x53, 0xf4, 0xb1,
	0x38, 0xf6, 0xc0, 0x01, 0x71, 0x28, 0xa8, 0x7d, 0x81, 0x8a, 0x27, 0x40, 0xd9, 0x75, 0xd2, 0xb4,
	0x32, 0x02, 0x52, 0xc1, 0x85, 0x93, 0x67, 0xc7, 0xf3, 0x7d, 0x9f, 0x67, 0xf6, 0x1b, 0x19, 0x96,
	0x0f, 0xdd, 0xf7, 0xf4, 0x30, 0x35, 0xc4, 0x43, 0x8f, 0x62, 0xca, 0x28, 0x2a, 0x89, 0x53, 0x7d,
	0xc3, 0x27, 0xec, 0x20, 0xed, 0xeb, 0x03, 0x1a, 0x18, 0x3e, 0xf5, 0xa9, 0xc1, 0x5f, 0xf7, 0xd3,
	0x37, 0x8f, 0xde, 0xae, 0xe9, 0x1d, 0x7d, 0x8d, 0x27, 0x79, 0x8e, 0x47, 0x02, 0x5d, 0x6f, 0xfa,
	0x94, 0xfa, 0x43, 0x3c, 0x29, 0x36, 0x18, 0x09, 0x70, 0xc2, 0xdc, 0x20, 0x12, 0x05, 0xda, 0x85,
	0x02, 0xf3, 0xe6, 0x60, 0x40, 0xd3, 0x90, 0x21, 0x07, 0x0a, 0xc4, 0x53, 0xe5, 0x96, 0xdc, 0xae,
	0x58, 0xd6, 0xe7, 0xd3, 0xe6, 0xea, 0x94, 0x24, 0x49, 0x92, 0x03, 0x7a, 0x37, 0x24, 0x22, 0x30,
	0x48, 0xc8, 0x70, 0x1c, 0xba, 0x43, 0x23, 0x3a, 0xf4, 0x8d, 0x34, 0x25, 0x9e, 0xbe, 0xbf, 0x6f,
	0x77, 0xbf, 0x9d, 0x36, 0xa1, 0x9f, 0xd0, 0xf0, 0x81, 0xf6, 0x9a, 0x78, 0x9a, 0x53, 0x20, 0x1e,
	0x42, 0xa0, 0x84, 0x6e, 0x80, 0xd5, 0x42, 0x4b, 0x6e, 0x97, 0x1d, 0x1e, 0xa3, 0x57, 0x50, 0x1d,
	0xc4, 0xd8, 0x65, 0xd8, 0xb3, 0x8e, 0xf6, 0x13, 0x1c, 0xdb, 0x5d, 0x75, 0x8e, 0x8b, 0x6e, 0xcc,
	0x22, 0xea, 0x5c, 0x27, 0x43, 0x09, 0x54, 0xd3, 0xc8, 0xbb, 0xc2, 0xaf, 0x70, 0x7e, 0x7b, 0xc6,
	0xa6, 0x96, 0x44, 0x53, 0x2b, 0x34, 0x20, 0x0c, 0x07, 0x11, 0x3b, 0xd2, 0x9c, 0xeb, 0x0a, 0x68,
	0x13, 0xca, 0xf8, 0x5d, 0x44, 0x62, 0x9c, 0x98, 0x4c, 0x2d, 0xb6, 0xe4, 0xf6, 0x62, 0xa7, 0xae,
	0x8b, 0xe9, 0xeb, 0xe3, 0xe9, 0xeb, 0x7b, 0xe3, 0xe9, 0x5b, 0xca, 0xf1, 0x97, 0xa6, 0xec, 0x5c,
	0x42, 0x46, 0xf8, 0xac, 0x0f, 0x93, 0xa9, 0xa5, 0x5f, 0xc5, 0x4f, 0x20, 0xe8, 0x19, 0x94, 0xb3,
	0x4f, 0x32, 0x99, 0x3a, 0xff, 0x53, 0xfc, 0xed, 0xdc, 0xb6, 0x04, 0xe9, 0x84, 0x67, 0x44, 0xea,
	0xe1, 0x21, 0x16, 0xa4, 0x0b, 0x37, 0x22, 0x9d, 0xf0, 0x68, 0x1f, 0x8b, 0xb0, 0x38, 0x1a, 0xda,
	0xa5, 0xed, 0xca, 0xae, 0x08, 0xed, 0x6e, 0xe6, 0xbe, 0xd9, 0x8c, 0x70, 0x49, 0x83, 0x9e, 0x40,
	0x29, 0x15, 0x37, 0x5f, 0xb8, 0x01, 0x61, 0xc6, 0x81, 0x56, 0x40, 0x89, 0xe9, 0x10, 0x73, 0x97,
	0xfe, 0xdf, 0x51, 0xf5, 0x6c, 0x41, 0xa7, 0x9a, 0xd0, 0x1d, 0x3a, 0xc4, 0x0e, 0xaf, 0xca, 0xb3,
	0xb7, 0xf2, 0x87, 0xed, 0x5d, 0xfc, 0x1b, 0xf6, 0xfe, 0x47, 0xec, 0x79, 0x0f, 0x94, 0xd1, 0x65,
	0xa2, 0x0a, 0x2c, 0xd8, 0xbb, 0xe6, 0xd6, 0x9e, 0xfd, 0xbc, 0x57, 0x93, 0x10, 0x40, 0x69, 0xa7,
	0xb7, 0x63, 0xf5, 0x9c, 0x9a, 0x8c, 0xca, 0x50, 0x34, 0xbb, 0x3b, 0xf6, 0x6e, 0xad, 0x3f, 0x0a,
	0x9f, 0xbe, 0xd8, 0xed, 0x39, 0xb5, 0x81, 0xb6, 0x0d, 0x95, 0x29, 0x43, 0x24, 0xe8, 0x3e, 0x54,
	0xd2, 0xa9, 0xb3, 0x2a, 0xb7, 0xe6, 0xda, 0x8b, 0x9d, 0xe5, 0x1c, 0xf3, 0x38, 0x57, 0x0a, 0x3b,
	0x17, 0x32, 0x94, 0x1e, 0xf3, 0x22, 0xb4, 0x0e, 0xff, 0x6d, 0xf1, 0x11, 0x8e, 0x77, 0xa5, 0x3a,
	0x86, 0x67, 0x89, 0xfa, 0xf5, 0x84, 0x26, 0xa1, 0x87, 0xb0, 0x24, 0x40, 0xd3, 0x4b, 0x96, 0xa7,
	0x5b, 0xcf, 0x4b, 0x6a, 0x12, 0x5a, 0x05, 0xd8, 0xc6, 0xec, 0x77, 0x24, 0x37, 0xa1, 0xba, 0x8d,
	0xd9, 0x95, 0xf6, 0x73, 0x05, 0x6f, 0xe5, 0x24, 0x13, 0x4d, 0xb2, 0x36, 0x3f, 0x9c, 0x35, 0xe4,
	0x93, 0xb3, 0x86, 0xfc, 0xf5, 0xac, 0x21, 0x1f, 0x9f, 0x37, 0xa4, 0x93, 0xf3, 0x86, 0xf4, 0xe9,
	0xbc, 0x21, 0xbd, 0xbc, 0xf3, 0x63, 0x3f, 0xbb, 0x11, 0xc9, 0x7e, 0x95, 0xfd, 0x12, 0xbf, 0xed,
	0xf5, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0xff, 0x75, 0x27, 0x70, 0x42, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KazokuClient is the client API for Kazoku service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KazokuClient interface {
	CreateAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error)
	CreateUserAccount(ctx context.Context, in *UserAccount, opts ...grpc.CallOption) (*UserAccount, error)
	GetAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error)
	GetUserAccounts(ctx context.Context, in *UserAccount, opts ...grpc.CallOption) (*UserAccounts, error)
}

type kazokuClient struct {
	cc *grpc.ClientConn
}

func NewKazokuClient(cc *grpc.ClientConn) KazokuClient {
	return &kazokuClient{cc}
}

func (c *kazokuClient) CreateAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/kazoku.Kazoku/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kazokuClient) CreateUserAccount(ctx context.Context, in *UserAccount, opts ...grpc.CallOption) (*UserAccount, error) {
	out := new(UserAccount)
	err := c.cc.Invoke(ctx, "/kazoku.Kazoku/CreateUserAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kazokuClient) GetAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/kazoku.Kazoku/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kazokuClient) GetUserAccounts(ctx context.Context, in *UserAccount, opts ...grpc.CallOption) (*UserAccounts, error) {
	out := new(UserAccounts)
	err := c.cc.Invoke(ctx, "/kazoku.Kazoku/GetUserAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KazokuServer is the server API for Kazoku service.
type KazokuServer interface {
	CreateAccount(context.Context, *Account) (*Account, error)
	CreateUserAccount(context.Context, *UserAccount) (*UserAccount, error)
	GetAccount(context.Context, *Account) (*Account, error)
	GetUserAccounts(context.Context, *UserAccount) (*UserAccounts, error)
}

func RegisterKazokuServer(s *grpc.Server, srv KazokuServer) {
	s.RegisterService(&_Kazoku_serviceDesc, srv)
}

func _Kazoku_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Account)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KazokuServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kazoku.Kazoku/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KazokuServer).CreateAccount(ctx, req.(*Account))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kazoku_CreateUserAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KazokuServer).CreateUserAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kazoku.Kazoku/CreateUserAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KazokuServer).CreateUserAccount(ctx, req.(*UserAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kazoku_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Account)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KazokuServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kazoku.Kazoku/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KazokuServer).GetAccount(ctx, req.(*Account))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kazoku_GetUserAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KazokuServer).GetUserAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kazoku.Kazoku/GetUserAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KazokuServer).GetUserAccounts(ctx, req.(*UserAccount))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kazoku_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kazoku.Kazoku",
	HandlerType: (*KazokuServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _Kazoku_CreateAccount_Handler,
		},
		{
			MethodName: "CreateUserAccount",
			Handler:    _Kazoku_CreateUserAccount_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _Kazoku_GetAccount_Handler,
		},
		{
			MethodName: "GetUserAccounts",
			Handler:    _Kazoku_GetUserAccounts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kazoku/kazoku.proto",
}

func (m *Account) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Account) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(m.Id.Size()))
		n1, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.CreatedByUserID != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(m.CreatedByUserID.Size()))
		n2, err := m.CreatedByUserID.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.UpdatedByUserID != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(m.UpdatedByUserID.Size()))
		n3, err := m.UpdatedByUserID.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.ExpiresAt != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(*m.ExpiresAt)))
		n4, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.ExpiresAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.CreatedAt != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)))
		n5, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if m.UpdatedAt != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)))
		n6, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	if m.DeletedAt != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(*m.DeletedAt)))
		n7, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.DeletedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}

func (m *UserAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserAccount) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.AccountID != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(m.AccountID.Size()))
		n8, err := m.AccountID.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	if m.UserID != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(m.UserID.Size()))
		n9, err := m.UserID.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	if m.Role != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(m.Role))
	}
	if m.CreatedByUserID != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(m.CreatedByUserID.Size()))
		n10, err := m.CreatedByUserID.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	if m.UpdatedByUserID != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(m.UpdatedByUserID.Size()))
		n11, err := m.UpdatedByUserID.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	if m.CreatedAt != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)))
		n12, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	if m.UpdatedAt != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)))
		n13, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	if m.DeletedAt != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintKazoku(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(*m.DeletedAt)))
		n14, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.DeletedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n14
	}
	return i, nil
}

func (m *UserAccounts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserAccounts) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.UserAccounts) > 0 {
		for _, msg := range m.UserAccounts {
			dAtA[i] = 0xa
			i++
			i = encodeVarintKazoku(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func encodeVarintKazoku(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Account) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovKazoku(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovKazoku(uint64(l))
	}
	if m.CreatedByUserID != nil {
		l = m.CreatedByUserID.Size()
		n += 1 + l + sovKazoku(uint64(l))
	}
	if m.UpdatedByUserID != nil {
		l = m.UpdatedByUserID.Size()
		n += 1 + l + sovKazoku(uint64(l))
	}
	if m.ExpiresAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.ExpiresAt)
		n += 1 + l + sovKazoku(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovKazoku(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovKazoku(uint64(l))
	}
	if m.DeletedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.DeletedAt)
		n += 1 + l + sovKazoku(uint64(l))
	}
	return n
}

func (m *UserAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountID != nil {
		l = m.AccountID.Size()
		n += 1 + l + sovKazoku(uint64(l))
	}
	if m.UserID != nil {
		l = m.UserID.Size()
		n += 1 + l + sovKazoku(uint64(l))
	}
	if m.Role != 0 {
		n += 1 + sovKazoku(uint64(m.Role))
	}
	if m.CreatedByUserID != nil {
		l = m.CreatedByUserID.Size()
		n += 1 + l + sovKazoku(uint64(l))
	}
	if m.UpdatedByUserID != nil {
		l = m.UpdatedByUserID.Size()
		n += 1 + l + sovKazoku(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovKazoku(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovKazoku(uint64(l))
	}
	if m.DeletedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.DeletedAt)
		n += 1 + l + sovKazoku(uint64(l))
	}
	return n
}

func (m *UserAccounts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.UserAccounts) > 0 {
		for _, e := range m.UserAccounts {
			l = e.Size()
			n += 1 + l + sovKazoku(uint64(l))
		}
	}
	return n
}

func sovKazoku(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozKazoku(x uint64) (n int) {
	return sovKazoku(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Account) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKazoku
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Account: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Account: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_issho_ni_issho_internal_pkg_uuid.UUID
			m.Id = &v
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedByUserID", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_issho_ni_issho_internal_pkg_uuid.UUID
			m.CreatedByUserID = &v
			if err := m.CreatedByUserID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedByUserID", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_issho_ni_issho_internal_pkg_uuid.UUID
			m.UpdatedByUserID = &v
			if err := m.UpdatedByUserID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExpiresAt == nil {
				m.ExpiresAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.ExpiresAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeletedAt == nil {
				m.DeletedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.DeletedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKazoku(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKazoku
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKazoku
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountID", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_issho_ni_issho_internal_pkg_uuid.UUID
			m.AccountID = &v
			if err := m.AccountID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_issho_ni_issho_internal_pkg_uuid.UUID
			m.UserID = &v
			if err := m.UserID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			m.Role = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Role |= (UserAccount_Role(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedByUserID", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_issho_ni_issho_internal_pkg_uuid.UUID
			m.CreatedByUserID = &v
			if err := m.CreatedByUserID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedByUserID", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_issho_ni_issho_internal_pkg_uuid.UUID
			m.UpdatedByUserID = &v
			if err := m.UpdatedByUserID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeletedAt == nil {
				m.DeletedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.DeletedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKazoku(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKazoku
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserAccounts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKazoku
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserAccounts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserAccounts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserAccounts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKazoku
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserAccounts = append(m.UserAccounts, &UserAccount{})
			if err := m.UserAccounts[len(m.UserAccounts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKazoku(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKazoku
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipKazoku(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowKazoku
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKazoku
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthKazoku
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowKazoku
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipKazoku(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthKazoku = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowKazoku   = fmt.Errorf("proto: integer overflow")
)
