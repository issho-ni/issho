syntax = "proto3";
import "github.com/gogo/protobuf@v1.3.1/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

package kazoku;
option go_package = "github.com/issho-ni/issho/api/kazoku";

import "common/common.proto";

service Kazoku {
    rpc CreateAccount(Account) returns (Account) {}
    rpc CreateUserAccount(UserAccount) returns (UserAccount) {}
    rpc GetAccount(Account) returns (Account) {}
    rpc GetUserAccounts(UserAccount) returns (UserAccounts) {}
}

message Account {
    common.UUID id = 1 [(gogoproto.moretags) = "bson:\"_id\""];
    string name = 2;
    common.UUID createdByUserID = 3;
    common.UUID updatedByUserID = 4 [(gogoproto.moretags) = "bson:\",omitempty\""];
    google.protobuf.Timestamp expiresAt = 5 [(gogoproto.stdtime) = true];
    google.protobuf.Timestamp createdAt = 6 [(gogoproto.stdtime) = true];
    google.protobuf.Timestamp updatedAt = 7 [(gogoproto.stdtime) = true, (gogoproto.moretags) = "bson:\",omitempty\""];
    google.protobuf.Timestamp deletedAt = 8 [(gogoproto.stdtime) = true, (gogoproto.moretags) = "bson:\",omitempty\""];
}

message UserAccount {
    common.UUID accountID = 1;
    common.UUID userID = 2;
    enum Role {
        INACTIVE = 0;
        MEMBER = 1;
        ADMIN = 98;
        OWNER = 99;
    }
    Role role = 3;
    common.UUID createdByUserID = 4;
    common.UUID updatedByUserID = 5 [(gogoproto.moretags) = "bson:\",omitempty\""];
    google.protobuf.Timestamp createdAt = 6 [(gogoproto.stdtime) = true];
    google.protobuf.Timestamp updatedAt = 7 [(gogoproto.stdtime) = true, (gogoproto.moretags) = "bson:\",omitempty\""];
    google.protobuf.Timestamp deletedAt = 8 [(gogoproto.stdtime) = true, (gogoproto.moretags) = "bson:\",omitempty\""];
}

message UserAccounts {
    repeated UserAccount userAccounts = 1;
}
