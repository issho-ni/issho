// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: youji/youji.proto

package youji

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_issho_ni_issho_internal_pkg_uuid "github.com/issho-ni/issho/internal/pkg/uuid"
	grpc "google.golang.org/grpc"
	io "io"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GetTodosParams struct {
}

func (m *GetTodosParams) Reset()         { *m = GetTodosParams{} }
func (m *GetTodosParams) String() string { return proto.CompactTextString(m) }
func (*GetTodosParams) ProtoMessage()    {}
func (*GetTodosParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2a35db6f47c18ee, []int{0}
}
func (m *GetTodosParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTodosParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTodosParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetTodosParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTodosParams.Merge(m, src)
}
func (m *GetTodosParams) XXX_Size() int {
	return m.Size()
}
func (m *GetTodosParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTodosParams.DiscardUnknown(m)
}

var xxx_messageInfo_GetTodosParams proto.InternalMessageInfo

type NewTodo struct {
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (m *NewTodo) Reset()         { *m = NewTodo{} }
func (m *NewTodo) String() string { return proto.CompactTextString(m) }
func (*NewTodo) ProtoMessage()    {}
func (*NewTodo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2a35db6f47c18ee, []int{1}
}
func (m *NewTodo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewTodo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewTodo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewTodo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTodo.Merge(m, src)
}
func (m *NewTodo) XXX_Size() int {
	return m.Size()
}
func (m *NewTodo) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTodo.DiscardUnknown(m)
}

var xxx_messageInfo_NewTodo proto.InternalMessageInfo

func (m *NewTodo) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Todo struct {
	Id          *github_com_issho_ni_issho_internal_pkg_uuid.UUID `protobuf:"bytes,1,opt,name=id,proto3,customtype=github.com/issho-ni/issho/internal/pkg/uuid.UUID" json:"id,omitempty" bson:"_id"`
	UserID      *github_com_issho_ni_issho_internal_pkg_uuid.UUID `protobuf:"bytes,2,opt,name=userID,proto3,customtype=github.com/issho-ni/issho/internal/pkg/uuid.UUID" json:"userID,omitempty"`
	Text        string                                            `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	CreatedAt   *time.Time                                        `protobuf:"bytes,4,opt,name=createdAt,proto3,stdtime" json:"createdAt,omitempty"`
	UpdatedAt   *time.Time                                        `protobuf:"bytes,5,opt,name=updatedAt,proto3,stdtime" json:"updatedAt,omitempty"`
	DeletedAt   *time.Time                                        `protobuf:"bytes,6,opt,name=deletedAt,proto3,stdtime" json:"deletedAt,omitempty"`
	CompletedAt *time.Time                                        `protobuf:"bytes,7,opt,name=completedAt,proto3,stdtime" json:"completedAt,omitempty"`
}

func (m *Todo) Reset()         { *m = Todo{} }
func (m *Todo) String() string { return proto.CompactTextString(m) }
func (*Todo) ProtoMessage()    {}
func (*Todo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2a35db6f47c18ee, []int{2}
}
func (m *Todo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Todo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Todo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Todo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Todo.Merge(m, src)
}
func (m *Todo) XXX_Size() int {
	return m.Size()
}
func (m *Todo) XXX_DiscardUnknown() {
	xxx_messageInfo_Todo.DiscardUnknown(m)
}

var xxx_messageInfo_Todo proto.InternalMessageInfo

func (m *Todo) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Todo) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Todo) GetUpdatedAt() *time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Todo) GetDeletedAt() *time.Time {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

func (m *Todo) GetCompletedAt() *time.Time {
	if m != nil {
		return m.CompletedAt
	}
	return nil
}

type Todos struct {
	Todos []*Todo `protobuf:"bytes,1,rep,name=todos,proto3" json:"todos,omitempty"`
}

func (m *Todos) Reset()         { *m = Todos{} }
func (m *Todos) String() string { return proto.CompactTextString(m) }
func (*Todos) ProtoMessage()    {}
func (*Todos) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2a35db6f47c18ee, []int{3}
}
func (m *Todos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Todos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Todos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Todos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Todos.Merge(m, src)
}
func (m *Todos) XXX_Size() int {
	return m.Size()
}
func (m *Todos) XXX_DiscardUnknown() {
	xxx_messageInfo_Todos.DiscardUnknown(m)
}

var xxx_messageInfo_Todos proto.InternalMessageInfo

func (m *Todos) GetTodos() []*Todo {
	if m != nil {
		return m.Todos
	}
	return nil
}

func init() {
	proto.RegisterType((*GetTodosParams)(nil), "youji.GetTodosParams")
	proto.RegisterType((*NewTodo)(nil), "youji.NewTodo")
	proto.RegisterType((*Todo)(nil), "youji.Todo")
	proto.RegisterType((*Todos)(nil), "youji.Todos")
}

func init() { proto.RegisterFile("youji/youji.proto", fileDescriptor_a2a35db6f47c18ee) }

var fileDescriptor_a2a35db6f47c18ee = []byte{
	// 442 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x4f, 0x8b, 0xd3, 0x40,
	0x18, 0xc6, 0x33, 0x6d, 0xd3, 0x75, 0xdf, 0x2e, 0x8b, 0x0e, 0x08, 0x25, 0x60, 0x5a, 0xc7, 0x4b,
	0x51, 0x9c, 0xd8, 0xba, 0x27, 0x41, 0xd1, 0xb8, 0x20, 0x0b, 0x22, 0x12, 0x76, 0x0f, 0x7a, 0x91,
	0xa4, 0x33, 0x66, 0x47, 0x9b, 0x4c, 0xc8, 0x4c, 0xfc, 0xf3, 0x2d, 0xf6, 0x23, 0x79, 0xf4, 0xb8,
	0x47, 0xf1, 0xb0, 0x4a, 0xfb, 0x0d, 0xfc, 0x04, 0x92, 0xc9, 0x9f, 0x8d, 0x07, 0xa1, 0xec, 0x25,
	0xbc, 0x79, 0x9f, 0xf9, 0x3d, 0xbc, 0x79, 0xe7, 0x09, 0xdc, 0xf8, 0x2a, 0x8b, 0x0f, 0xc2, 0x33,
	0x4f, 0x9a, 0xe5, 0x52, 0x4b, 0x6c, 0x9b, 0x17, 0xe7, 0x20, 0x16, 0xfa, 0xb4, 0x88, 0xe8, 0x52,
	0x26, 0x5e, 0x2c, 0x63, 0xe9, 0x19, 0x35, 0x2a, 0xde, 0x3f, 0xfd, 0x34, 0xa7, 0x0b, 0x3a, 0x37,
	0x4d, 0xd3, 0x33, 0x55, 0x05, 0x3b, 0x93, 0x58, 0xca, 0x78, 0xc5, 0xdb, 0xc3, 0x9e, 0x16, 0x09,
	0x57, 0x3a, 0x4c, 0xb2, 0xea, 0x00, 0xb9, 0x0e, 0xfb, 0x2f, 0xb8, 0x3e, 0x96, 0x4c, 0xaa, 0xd7,
	0x61, 0x1e, 0x26, 0x8a, 0xdc, 0x82, 0x9d, 0x57, 0xfc, 0x73, 0xd9, 0xc1, 0x18, 0x06, 0x9a, 0x7f,
	0xd1, 0x63, 0x34, 0x45, 0xb3, 0xdd, 0xc0, 0xd4, 0xe4, 0x5b, 0x1f, 0x06, 0x46, 0x0c, 0xa0, 0x27,
	0x98, 0x91, 0xf6, 0x7c, 0xff, 0xe7, 0xc5, 0xe4, 0x41, 0x67, 0x40, 0xa1, 0xd4, 0xa9, 0xbc, 0x9f,
	0x8a, 0xaa, 0xf0, 0x44, 0xaa, 0x79, 0x9e, 0x86, 0x2b, 0x2f, 0xfb, 0x18, 0x7b, 0x45, 0x21, 0x18,
	0x3d, 0x39, 0x39, 0x3a, 0xfc, 0x73, 0x31, 0x81, 0x48, 0xc9, 0xf4, 0x11, 0x79, 0x27, 0x18, 0x09,
	0x7a, 0x82, 0xe1, 0x97, 0x30, 0x2c, 0x14, 0xcf, 0x8f, 0x0e, 0xc7, 0x3d, 0xe3, 0x7b, 0x70, 0x15,
	0xdf, 0xa0, 0xf6, 0x68, 0xc7, 0xef, 0x5f, 0x8e, 0x8f, 0x9f, 0xc0, 0xee, 0x32, 0xe7, 0xa1, 0xe6,
	0xec, 0x99, 0x1e, 0x0f, 0xa6, 0x68, 0x36, 0x5a, 0x38, 0xb4, 0x5a, 0x12, 0x6d, 0x96, 0x44, 0x8f,
	0x9b, 0x25, 0xf9, 0x83, 0xb3, 0x5f, 0x13, 0x14, 0x5c, 0x22, 0x25, 0x5f, 0x64, 0xac, 0xe6, 0xed,
	0x6d, 0xf9, 0x16, 0x29, 0x79, 0xc6, 0x57, 0xbc, 0xe2, 0x87, 0xdb, 0xf2, 0x2d, 0x82, 0x7d, 0x18,
	0x2d, 0x65, 0x92, 0x35, 0x0e, 0x3b, 0x5b, 0x3a, 0x74, 0x21, 0x72, 0x17, 0x6c, 0x73, 0xe1, 0xf8,
	0x36, 0xd8, 0xba, 0x2c, 0xc6, 0x68, 0xda, 0x9f, 0x8d, 0x16, 0x23, 0x5a, 0xe5, 0xae, 0x14, 0x83,
	0x4a, 0x59, 0xc4, 0x60, 0xbf, 0x29, 0x9b, 0xf8, 0x1e, 0xc0, 0x73, 0xb3, 0x05, 0x73, 0xf9, 0xfb,
	0xf5, 0xd1, 0x3a, 0x29, 0x4e, 0x17, 0x25, 0x16, 0x9e, 0xc3, 0xb5, 0x26, 0x55, 0xf8, 0x66, 0x2d,
	0xfd, 0x1b, 0x33, 0x67, 0xaf, 0x43, 0x28, 0x62, 0xf9, 0x8f, 0xbf, 0xaf, 0x5d, 0x74, 0xbe, 0x76,
	0xd1, 0xef, 0xb5, 0x8b, 0xce, 0x36, 0xae, 0x75, 0xbe, 0x71, 0xad, 0x1f, 0x1b, 0xd7, 0x7a, 0x7b,
	0xe7, 0xff, 0x01, 0x08, 0xb3, 0xfa, 0x5f, 0x89, 0x86, 0xe6, 0xd3, 0x1f, 0xfe, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0xb5, 0xf5, 0x10, 0x1e, 0x41, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// YoujiClient is the client API for Youji service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YoujiClient interface {
	CreateTodo(ctx context.Context, in *NewTodo, opts ...grpc.CallOption) (*Todo, error)
	GetTodos(ctx context.Context, in *GetTodosParams, opts ...grpc.CallOption) (*Todos, error)
}

type youjiClient struct {
	cc *grpc.ClientConn
}

func NewYoujiClient(cc *grpc.ClientConn) YoujiClient {
	return &youjiClient{cc}
}

func (c *youjiClient) CreateTodo(ctx context.Context, in *NewTodo, opts ...grpc.CallOption) (*Todo, error) {
	out := new(Todo)
	err := c.cc.Invoke(ctx, "/youji.Youji/CreateTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *youjiClient) GetTodos(ctx context.Context, in *GetTodosParams, opts ...grpc.CallOption) (*Todos, error) {
	out := new(Todos)
	err := c.cc.Invoke(ctx, "/youji.Youji/GetTodos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YoujiServer is the server API for Youji service.
type YoujiServer interface {
	CreateTodo(context.Context, *NewTodo) (*Todo, error)
	GetTodos(context.Context, *GetTodosParams) (*Todos, error)
}

func RegisterYoujiServer(s *grpc.Server, srv YoujiServer) {
	s.RegisterService(&_Youji_serviceDesc, srv)
}

func _Youji_CreateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewTodo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoujiServer).CreateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/youji.Youji/CreateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoujiServer).CreateTodo(ctx, req.(*NewTodo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Youji_GetTodos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTodosParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoujiServer).GetTodos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/youji.Youji/GetTodos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoujiServer).GetTodos(ctx, req.(*GetTodosParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Youji_serviceDesc = grpc.ServiceDesc{
	ServiceName: "youji.Youji",
	HandlerType: (*YoujiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTodo",
			Handler:    _Youji_CreateTodo_Handler,
		},
		{
			MethodName: "GetTodos",
			Handler:    _Youji_GetTodos_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "youji/youji.proto",
}

func (m *GetTodosParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTodosParams) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *NewTodo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewTodo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Text) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintYouji(dAtA, i, uint64(len(m.Text)))
		i += copy(dAtA[i:], m.Text)
	}
	return i, nil
}

func (m *Todo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Todo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintYouji(dAtA, i, uint64(m.Id.Size()))
		n1, err := m.Id.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.UserID != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintYouji(dAtA, i, uint64(m.UserID.Size()))
		n2, err := m.UserID.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if len(m.Text) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintYouji(dAtA, i, uint64(len(m.Text)))
		i += copy(dAtA[i:], m.Text)
	}
	if m.CreatedAt != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintYouji(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)))
		n3, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.UpdatedAt != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintYouji(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)))
		n4, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.DeletedAt != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintYouji(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(*m.DeletedAt)))
		n5, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.DeletedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if m.CompletedAt != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintYouji(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(*m.CompletedAt)))
		n6, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CompletedAt, dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	return i, nil
}

func (m *Todos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Todos) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Todos) > 0 {
		for _, msg := range m.Todos {
			dAtA[i] = 0xa
			i++
			i = encodeVarintYouji(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func encodeVarintYouji(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *GetTodosParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *NewTodo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovYouji(uint64(l))
	}
	return n
}

func (m *Todo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovYouji(uint64(l))
	}
	if m.UserID != nil {
		l = m.UserID.Size()
		n += 1 + l + sovYouji(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovYouji(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovYouji(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovYouji(uint64(l))
	}
	if m.DeletedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.DeletedAt)
		n += 1 + l + sovYouji(uint64(l))
	}
	if m.CompletedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CompletedAt)
		n += 1 + l + sovYouji(uint64(l))
	}
	return n
}

func (m *Todos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Todos) > 0 {
		for _, e := range m.Todos {
			l = e.Size()
			n += 1 + l + sovYouji(uint64(l))
		}
	}
	return n
}

func sovYouji(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozYouji(x uint64) (n int) {
	return sovYouji(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetTodosParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYouji
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTodosParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTodosParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYouji(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYouji
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewTodo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYouji
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewTodo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewTodo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYouji
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYouji
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYouji(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYouji
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Todo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYouji
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Todo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Todo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYouji
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthYouji
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_issho_ni_issho_internal_pkg_uuid.UUID
			m.Id = &v
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYouji
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthYouji
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_issho_ni_issho_internal_pkg_uuid.UUID
			m.UserID = &v
			if err := m.UserID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYouji
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYouji
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYouji
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYouji
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYouji
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYouji
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYouji
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYouji
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeletedAt == nil {
				m.DeletedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.DeletedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYouji
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYouji
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CompletedAt == nil {
				m.CompletedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CompletedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYouji(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYouji
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Todos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYouji
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Todos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Todos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Todos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYouji
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYouji
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Todos = append(m.Todos, &Todo{})
			if err := m.Todos[len(m.Todos)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYouji(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYouji
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipYouji(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowYouji
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowYouji
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowYouji
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthYouji
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowYouji
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipYouji(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthYouji = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowYouji   = fmt.Errorf("proto: integer overflow")
)
